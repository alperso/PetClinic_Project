#1- Actuator settings

#Actuator default olarak http ye açık olanların dışında diger endpointlere erismek icin kullanilir
#eger istersek teker teker de ekleme yapabiliriz.
# Varsayılan durumda sadece /health ve /info servisleri web’den erişilebilir

#Istenen actuator endpointlerini secebiliriz
#management.endpoints.web.exposure.include=health,info,metrics

#Butun actuator endpointlerini acar
#management.endpoints.web.exposure.include=*

#Bu komut actuator endpointinin alt endpointlerini kapatir
management.endpoints.enabled-by-default=false

#2-Properties Configurasyon

petclinic.display-owners-with-pets=true

#3- Jsp sayfalarını cozumleyen build-in ViewResolver beanına prefix ve suffix tanımalamaları yapılarak kod icerisinde ekrar eden path bilgileri ortadan
#kaldırılabilir

spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

#Calismıyor duzenle
#spring.mvc.view.prefix=/src/main/resources/public/
#spring.mvc.view.suffix=.html

#4-Request-Response Content Tipinin Belirlenmesi

#Bu ayar, gelen isteğin URL'sindeki uzantıya bakarak (örneğin, .json, .xml)
#istemcinin hangi türde veri istediğini anlamaya çalışıp çalışmayacağını belirler.
#Eğer favor-path-extension=true ise:
# Spring, .json uzantısına bakar ve bunun bir JSON isteği olduğunu anlar.
# Yanıtın Content-Type'ını otomatik olarak application/json yapar.
spring.mvc.contentnegotiation.favor-path-extension=true


#Spring bir isteği eşleştirirken URL'nin sonunda belirli bir dosya uzantısını içeren rotaları da dikkate alır. Örneğin:
#/api/resource ve /api/resource.json aynı endpoint'e yönlendirilir.
#Bu ayar, URL'lerde dosya uzantısı varsa Spring'in bu tür yolları eşleştirme işlemine dahil edip etmeyeceğini belirler.
#Bir endpoint'iniz var: /api/kaynak.
#Eğer use-suffix-pattern=true ise:
#/api/kaynak, /api/kaynak.json, /api/kaynak.xml gibi yollar aynı endpoint ile eşleştirilir. Uzantıya bakmaz ve endpoint'i bulur.
#Eğer use-suffix-pattern=false ise:
#Sadece tam eşleşen URL'ler dikkate alınır. Örneğin:
#/api/kaynak çalışır.
#Ama /api/kaynak.json hata verir (eşleşmez).
spring.mvc.pathmatch.use-suffix-pattern=true 

#İstekler
#http://localhost:8080/rest/getOwner/1
#http://localhost:8080/rest/getOwner/1.xml

#<owner>
#    <firstName>Alper</firstName>
#    <id>1</id>
#    <lastName>ONER</lastName>
#</owner>

#http://localhost:8080/rest/getOwner/1.json
#{
#"id": 1,
#"firstName": "Alper",
#"lastName": "ONER"
#}

#5- H2 DATABASE
# Uygulama bu IP adresinde çalışacak
#server.address=10.20.30.215
# Uygulama 8082 portunda çalışacak
#server.port=8082             

#spring.datasource.url=jdbc:h2:file:C:/Users/alperoner/test
#spring.datasource.username=sa
#spring.datasource.password=

#6-  JPA
#ddl-auto none veriyoruz cunku kendi schema.sql ile tablolarimiz var. 
#Eger baska bir db olsaydı oracle gibi bu kismi create,auto gibi degerler yazilacak
#format_sql tek satir da sql leri logda gormek icin false yazilir
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=true

#6-  Spring Security

#Alttakini yazmazsam defaultusername:user, default loglarda password olusur
spring.security.user.name=admin
spring.security.user.password=admin
